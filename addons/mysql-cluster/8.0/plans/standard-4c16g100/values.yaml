## @param fullnameOverride String to fully override common.names.fullname template
##
fullnameOverride: hb-mysql-cluster-standard-100

## MinIO&reg; containers' resource requests and limits
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
## @param resources.limits The resources limits for the MinIO&reg; container
## @param resources.requests The requested resources for the MinIO&reg; container
##
primary: 
  extraConfig: |
    [mysqld]
    innodb_io_capacity=2000
    innodb_io_capacity_max=3000
    max_connect_errors=1000000
    open_files_limit=2000000                                     
    performance_schema_max_table_instances=200
    thread_cache_size=0
    innodb_flush_method=O_DIRECT
    innodb_read_io_threads=8                 
    innodb_write_io_threads=8                          
    innodb_buffer_pool_instances=4
    innodb_buffer_pool_size=10737418240
    max_connections=4000

  resources:
    limits:
      cpu: 4000m
      memory: 16Gi
    requests:
      cpu: 4000m
      memory: 12Gi
  
## @section Persistence parameters

## Enable persistence using Persistent Volume Claims
## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
##
  persistence:
    ## @param primary.persistence.enabled Enable persistence on MySQL primary replicas using a `PersistentVolumeClaim`. If false, use emptyDir
    ##
    enabled: true
    ## @param primary.persistence.existingClaim Name of an existing `PersistentVolumeClaim` for MySQL primary replicas
    ## NOTE: When it's set the rest of persistence parameters are ignored
    ##
    existingClaim: ""
    ## @param primary.persistence.storageClass MySQL primary persistent volume storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""
    ## @param primary.persistence.annotations MySQL primary persistent volume claim annotations
    ##
    annotations: {}
    ## @param primary.persistence.accessModes MySQL primary persistent volume access Modes
    ##
    accessModes:
      - ReadWriteOnce
    ## @param primary.persistence.size MySQL primary persistent volume size
    ##
    size: 100Gi
    ## @param primary.persistence.selector Selector to match an existing Persistent Volume
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    ##
    selector: {}

router:
  replicaCount: 3
  configuration: |-
    [DEFAULT]
    max_total_connections = 1200
    [routing:bootstrap_rw]
    max_connections= 1200
  resources:
    limits: 
      cpu: 500m
      memory: 512Mi
    requests: 
      cpu: 500m
      memory: 512Mi