---
# Source: apollo/templates/adminservice/secret.yaml
kind: Secret
apiVersion: v1
metadata:
  name: release-name-apollo-adminservice
data:
  application-github.properties: |
    spring.datasource.url = jdbc:mysql://:3306/ApolloConfigDB?characterEncoding=utf8
    spring.datasource.username = 1
    spring.datasource.password = 1
---
# Source: apollo/templates/portal/secret.yaml
kind: Secret
apiVersion: v1
metadata:
  name: release-name-apollo-portal
data:
  application-github.properties: |
    spring.datasource.url = jdbc:mysql://:3306/ApolloPortalDB?characterEncoding=utf8
    spring.datasource.username = 1
    spring.datasource.password = 1
    apollo.portal.envs = dev
    apollo-env.properties: |
    dev = release-name-apollo-configservice:8080
---
# Source: apollo/templates/configservice/secret.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: release-name-apollo-configservice
data:
  application-github.properties: |
    spring.datasource.url = jdbc:mysql://:3306/ApolloConfigDB?characterEncoding=utf8
    spring.datasource.username = 1
    spring.datasource.password = 1
    apollo.config-service.url = http://release-name-apollo-configservice.default:8080
    apollo.admin-service.url = http://release-name-apollo-adminservice.default:8090
---
# Source: apollo/templates/adminservice/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: release-name-apollo-adminservice
  labels:
    app.kubernetes.io/version: "2.3.0"
spec:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 8090
      targetPort: 8090
  selector:
    app: release-name-apollo-adminservice
---
# Source: apollo/templates/configservice/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: release-name-apollo-configservice            
  labels:
    app.kubernetes.io/version: "2.3.0"
spec:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: release-name-apollo-configservice
---
# Source: apollo/templates/portal/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: release-name-apollo-portal
  labels:
    app.kubernetes.io/version: "2.3.0"
spec:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 8070
      targetPort: 8070
  selector:
    app: release-name-apollo-portal
  sessionAffinity: ClientIP
---
# Source: apollo/templates/adminservice/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: release-name-apollo-adminservice
  labels:
    app.kubernetes.io/version: "2.3.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: release-name-apollo-adminservice
  template:
    metadata:
      labels:
        app: release-name-apollo-adminservice
    spec:
      volumes:
        - name: volume-configmap-release-name-apollo-adminservice
          configMap:
            name: release-name-apollo-adminservice
            items:
              - key: application-github.properties
                path: application-github.properties
            defaultMode: 420
      containers:
        - name: apollo-adminservice
          image: "drycc-addons/apollo-adminservice:2.3"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8090
              protocol: TCP
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "github,kubernetes"
          volumeMounts:
            - name: volume-configmap-release-name-apollo-adminservice
              mountPath: /apollo-adminservice/config/application-github.properties
              subPath: application-github.properties
          livenessProbe:
            tcpSocket:
              port: 8090
            initialDelaySeconds: 100
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8090
            initialDelaySeconds: 30
            periodSeconds: 5
          resources:
            {}
---
# Source: apollo/templates/configservice/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: release-name-apollo-configservice
  labels:
    app.kubernetes.io/version: "2.3.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: release-name-apollo-configservice
  template:
    metadata:
      labels:
        app: release-name-apollo-configservice
    spec:
      volumes:
        - name: volume-configmap-release-name-apollo-configservice
          configMap:
            name: release-name-apollo-configservice
            items:
              - key: application-github.properties
                path: application-github.properties
            defaultMode: 420
      containers:
        - name: apollo-configservice
          image: "drycc-addons/apollo-configservice:2.3"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "github,kubernetes"
          volumeMounts:
            - name: volume-configmap-release-name-apollo-configservice
              mountPath: /apollo-configservice/config/application-github.properties
              subPath: application-github.properties
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 100
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 5
          resources:
            {}
---
# Source: apollo/templates/portal/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: release-name-apollo-portal
  labels:
    app.kubernetes.io/version: "2.3.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-apollo-portal
  template:
    metadata:
      labels:
        app: release-name-apollo-portal
    spec:
      volumes:
        - name: secret-release-name-apollo-portal
          Secret:
            name: release-name-apollo-portal
            items:
              - key: application-github.properties
                path: application-github.properties
              - key: apollo-env.properties
                path: apollo-env.properties
            defaultMode: 420
      containers:
        - name: apollo-portal
          image: "drycc-addons/apollo-portal:2.3"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8070
              protocol: TCP
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "github,auth"
          volumeMounts:
            - name: secret-release-name-apollo-portal
              mountPath: /apollo-portal/config/application-github.properties
              subPath: application-github.properties
            - name: secret-release-name-apollo-portal
              mountPath: /apollo-portal/config/apollo-env.properties
              subPath: apollo-env.properties
          livenessProbe:
            tcpSocket:
              port: 8070
            initialDelaySeconds: 100
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8070
            initialDelaySeconds: 30
            periodSeconds: 5
          resources:
            {}
---
# Source: apollo/templates/portal/ingress.yaml
#
