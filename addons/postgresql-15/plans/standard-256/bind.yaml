credential:
  - name: HOST
    valueFrom:
      serviceRef:
        name: {{ template "postgresql.primary.fullname" . }}
        jsonpath: '{ .status.loadBalancer.ingress[*].ip }'

  - name: PORT
    valueFrom:  
      serviceRef:
        name: {{ template "postgresql.primary.fullname" . }}
        jsonpath: '{ .spec.ports[?(@.name=="tcp-postgresql")].port }'

  {{- if not (empty (include "postgresql.username" .)) }}
  - name: USERNAME
    value: {{ template "postgresql.username" . }}
  {{- end }}

  - name: PASSWORD
    valueFrom:
      secretKeyRef:
        name: {{ template "common.names.fullname" . }}
        jsonpath: '{ .data.postgres-password }'

  {{- if (include "postgresql.database" .) }}
  - name: DATABASE
    value: {{ template "postgresql.database" . }}
  {{- end }}

  {{- if eq .Values.architecture "replication" }}
  - name: READHOST
    valueFrom:
      serviceRef:
        name: {{ template "postgresql.readReplica.fullname" . }}
        jsonpath: '{ .status.loadBalancer.ingress[*].ip }'

  - name: READPORT
    valueFrom:
      serviceRef:
        name: {{ template "postgresql.readReplica.fullname" . }}
        jsonpath: '{ .spec.ports[?(@.name=="tcp-postgresql")].port }'

  - name: REPLICATIONUSERNAME
    value: {{ .Values.auth.replicationUsername }}

  - name: REPLICATIONPASSWORD
    valueFrom:
      secretKeyRef:
        name: {{ template "common.names.fullname" . }}
        jsonpath: '{ .data.replication-password }'
  {{- end }}
