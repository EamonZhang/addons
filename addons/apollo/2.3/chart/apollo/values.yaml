# Copyright Drycc Community.
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

portal:
  enabled: true
  name: apollo-portal
  fullNameOverride: ""
  replicaCount: 1
  containerPort: 8070
  image:
    registry: registry.drycc.cc
    repository: drycc-addons/apollo-portal
    tag: "2.3"
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  service:
    fullNameOverride: ""
    port: 8070
    targetPort: 8070
    type: ClusterIP
    sessionAffinity: ClientIP
  ingress:
    ingressClassName: null
    enabled: false
    annotations: {}
    hosts:
      - host: ""
        paths: []
    tls: []
  liveness:
    initialDelaySeconds: 100
    periodSeconds: 10
  readiness:
    initialDelaySeconds: 30
    periodSeconds: 5
  # environment variables passed to the container, e.g. JAVA_OPTS
  env: {}
  strategy: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  annotations: {}

  config:
    # spring profiles to activate
    profiles: "github,auth"
    # specify the env names, e.g. dev,pro
    envs: "dev"
    # specify the meta servers, e.g.
    # dev: http://apollo-configservice-dev:8080
    # pro: http://apollo-configservice-pro:8080
    metaServers: ""
    # specify the context path, e.g. /apollo
    contextPath: ""
    # extra config files for apollo-portal, e.g. application-ldap.yml
    files: {}

  portaldb:
    # apolloportaldb host
    host: ""
    port: 3306
    dbName: ApolloPortalDB
    # apolloportaldb user name
    userName: "1"
    # apolloportaldb password
    password: "1"
    connectionStringProperties: characterEncoding=utf8


## @section Apollo parameters

apolloService:
  enabled: true
  meta: "dev"
  configdb:
    # apolloconfigdb host
    host: ""
    port: 3306
    dbName: ApolloConfigDB
    # apolloconfigdb user name
    userName: "1"
    # apolloconfigdb password
    password: "1"
    connectionStringProperties: characterEncoding=utf8

  configService:
    name: apollo-configservice
    fullNameOverride: ""
    replicaCount: 2
    containerPort: 8080
    image:
      repository: drycc-addons/apollo-configservice
      tag: "2.3"
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
    service:
      fullNameOverride: ""
      port: 8080
      targetPort: 8080
      type: ClusterIP
    ingress:
      ingressClassName: null
      enabled: false
      annotations: { }
      hosts:
        - host: ""
          paths: [ ]
      tls: [ ]
    liveness:
      initialDelaySeconds: 100
      periodSeconds: 10
    readiness:
      initialDelaySeconds: 30
      periodSeconds: 5
    config:
      # spring profiles to activate
      profiles: "github,kubernetes"
      # override apollo.config-service.url: config service url to be accessed by apollo-client 
      configServiceUrlOverride: ""
      # override apollo.admin-service.url: admin service url to be accessed by apollo-portal 
      adminServiceUrlOverride: ""
      # specify the context path, e.g. /apollo
      contextPath: ""
    # environment variables passed to the container, e.g. JAVA_OPTS
    env: {}
    strategy: {}
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}
    annotations: {}

  adminService:
    name: apollo-adminservice
    fullNameOverride: ""
    replicaCount: 2
    containerPort: 8090
    image:
      registry: registry.drycc.cc
      repository: drycc-addons/apollo-adminservice
      tag: "2.3"
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
    service:
      fullNameOverride: ""
      port: 8090
      targetPort: 8090
      type: ClusterIP
    ingress:
      ingressClassName: null
      enabled: false
      annotations: { }
      hosts:
        - host: ""
          paths: [ ]
      tls: [ ]
    liveness:
      initialDelaySeconds: 100
      periodSeconds: 10
    readiness:
      initialDelaySeconds: 30
      periodSeconds: 5
    config:
      # spring profiles to activate
      profiles: "github,kubernetes"
      # specify the context path, e.g. /apollo
      contextPath: ""
    # environment variables passed to the container, e.g. JAVA_OPTS
    env: {}
    strategy: {}
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}
    annotations: {}

